{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","photos","changePhotos","page","changePage","useInView","threshold","ref","inView","getPhotos","a","axios","get","data","console","log","toString","useEffect","className","map","e","id","alt","src","urls","regular","user","name","type","color","height","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTA2DeA,MArDf,WAEE,MAA4BC,mBAAS,IAArC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,GAAjC,mBAAKG,EAAL,KAAUC,EAAV,KAEA,EAAwBC,YAAU,CAACC,UAAU,IAArCC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAGTC,EAAS,uCAAG,8BAAAC,EAAA,+EAEOC,IAAMC,IAAN,+CAAkDT,EAAlD,sBANR,gDAIC,gBAEPU,EAFO,EAEPA,KACLX,GAAa,SAAAD,GAAM,4BAAMA,GAAN,YAAgBY,OAHvB,gDAKZC,QAAQC,IAAI,KAAIC,YALJ,yDAAH,qDA+Bb,OAtBAC,qBAAU,YACM,IAAXT,GACDJ,GAAW,SAAAD,GAAI,OAAEA,EAAK,OAExB,CAACK,IAEHS,qBAAU,WACRR,MACA,CAACN,IAeD,sBAAKe,UAAU,MAAf,UACE,0CACA,qBAAKA,UAAU,cAAf,SAdKjB,EAAOkB,KAAI,SAACC,EAAEC,GACnB,OACE,sBAAKH,UAAU,eAAf,UACE,qBAAKI,IAAI,GAAGC,IAAKH,EAAEI,KAAKC,UACxB,oBAAIP,UAAU,UAAd,SAAyBE,EAAEM,KAAKC,SAFCN,QAgBrC,qBAAKH,UAAU,UAAUX,IAAKA,EAA9B,UACY,IAATC,EAAc,cAAC,IAAD,CAAQoB,KAAK,OAAOC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAAS,WCzCxEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70bed0e5.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {useInView} from 'react-intersection-observer';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport './App.css';\nfunction App() {\n  \n  let [photos,changePhotos] = useState([]);\n  let [page,changePage] = useState(1);\n  let clientId = \"W1xXuHYwXPYq91hWDb9SOHQbAupgfvJeIJOejY2BDyQ\";\n  const { ref, inView } = useInView({threshold:0});\n\n\n  let getPhotos = async ()=>{\n    try{\n      let {data} = await axios.get(`https://api.unsplash.com/photos?page=${page}&client_id=${clientId}`);\n      changePhotos(photos=>[...photos,...data]);\n    }catch(err){\n      console.log(err.toString());\n    }\n  }\n\n  useEffect(()=>{\n    if(inView === true){\n      changePage(page=>page+1);\n    }\n  },[inView]);\n\n  useEffect(()=>{\n    getPhotos();\n  },[page]);\n\n  let buildImage = ()=>{\n    return photos.map((e,id)=>{\n      return (\n        <div className=\"img__wrapper\" key={id}>\n          <img alt=\"\" src={e.urls.regular}/>\n          <h1 className=\"caption\">{e.user.name}</h1>\n        </div>\n      )\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Unsplash</h1>\n      <div className=\"img__holder\">\n          {buildImage()}\n      </div>\n\n      <div className=\"loading\" ref={ref}>\n        {inView===true?<Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}